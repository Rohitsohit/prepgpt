{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n  _s();\n  const [QuizTitles, setQuizTitles] = useState();\n  const questions = [\"What is your name?\", \"Describe your experience with React.\", \"What is Tailwind CSS?\", \"Explain the difference between REST and GraphQL.\", \"How do you optimize a React application?\", \"What are the new features in ES6?\"\n  // Add more questions as needed\n  ];\n  useEffect(() => {\n    fetchTitles();\n  }, []);\n  const fetchTitles = async () => {\n    try {\n      const response = await fetch(`${backend}/gpt/getallquiz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setQuizTitles(data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const fetchQuiz = async () => {\n    try {\n      const response = await fetch(`${backend}/gpt/get-quiz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const handleQuestionClick = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col lg:flex-row pt-32\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Saved Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: QuizTitles.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleQuestionClick(question),\n          className: \"p-2 border-b border-gray-300\",\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\",\n      children: /*#__PURE__*/_jsxDEV(QuestionComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionLayout, \"isrMryB0WFzqKZtByIAhj2C9kx8=\");\n_c = QuestionLayout;\nexport default QuestionLayout;\nvar _c;\n$RefreshReg$(_c, \"QuestionLayout\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComponent","useSearchParams","jsxDEV","_jsxDEV","backend","QuestionLayout","_s","QuizTitles","setQuizTitles","questions","fetchTitles","response","fetch","method","headers","ok","Error","data","json","quizTitles","error","console","fetchQuiz","log","handleQuestionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","onClick","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport { useSearchParams } from 'react-router-dom';\n\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n\n  const [QuizTitles, setQuizTitles] = useState();\n  \n  const questions = [\n    \"What is your name?\",\n    \"Describe your experience with React.\",\n    \"What is Tailwind CSS?\",\n    \"Explain the difference between REST and GraphQL.\",\n    \"How do you optimize a React application?\",\n    \"What are the new features in ES6?\",\n    // Add more questions as needed\n  ];\n\n  useEffect(() => {\n    \n    fetchTitles();\n    \n  }, [])\n\n  const fetchTitles = async () => {\n    try {\n      const response = await fetch(`${backend}/gpt/getallquiz`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setQuizTitles(data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n\n  \n  const fetchQuiz = async ()=>{\n    try {\n      const response = await fetch(`${backend}/gpt/get-quiz`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n     console.log(data)\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  }\n\n  const handleQuestionClick = ()=>{\n\n  }\n\n\n  return (\n    <div className=\"flex flex-col lg:flex-row pt-32\"> {/* Added padding-top */}\n      <div className=\"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n        <ul>\n          {QuizTitles.map((question, index) => (\n            <li key={index} onClick={()=>handleQuestionClick(question)} className=\"p-2 border-b border-gray-300\">\n              {question}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\">\n        <QuestionComponent/>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}