{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n  _s();\n  const [QuizTitles, setQuizTitles] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n  useEffect(() => {\n    fetchTitles();\n  }, []);\n  const fetchTitles = async () => {\n    try {\n      if (user) {\n        const response = await axios.get(`${backend}/gpt/getallquiz`, {\n          params: {\n            username: user.username\n          }\n        });\n        setQuizTitles(response.data.quizTitles || []);\n      } else {\n        console.log(\"plesse log in first\");\n      }\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const fetchQuiz = async (titleToRetrieve, username) => {\n    try {\n      if (user) {\n        await axios.post(`${backend}/gpt/get-quiz`, {\n          titleToRetrieve,\n          username\n        });\n      } else {\n        console.log(\"please log in \");\n      }\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const handleQuestionClick = title => {\n    console.log(title);\n    fetchQuiz(title, user.username);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col lg:flex-row pt-32\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Saved Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: QuizTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleQuestionClick(title),\n          className: \"p-2 border-b border-gray-300\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\",\n      children: /*#__PURE__*/_jsxDEV(QuestionComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionLayout, \"zcCFsoYra2hrm/6oVXsX6uohoIM=\");\n_c = QuestionLayout;\nexport default QuestionLayout;\nvar _c;\n$RefreshReg$(_c, \"QuestionLayout\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComponent","axios","jsxDEV","_jsxDEV","backend","QuestionLayout","_s","QuizTitles","setQuizTitles","user","JSON","parse","localStorage","getItem","fetchTitles","response","get","params","username","data","quizTitles","console","log","error","fetchQuiz","titleToRetrieve","post","handleQuestionClick","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\n\nimport axios from 'axios';\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n\n  const [QuizTitles, setQuizTitles] = useState([]);\n  \n  const user=JSON.parse(localStorage.getItem(\"profile-prepGPT\"))\n  \n  useEffect(() => {\n    \n    fetchTitles();\n    \n  }, [])\n\n  const fetchTitles = async () => {\n    try {\n     \n      if(user){\n        const response = await axios.get(`${backend}/gpt/getallquiz`, {\n          params: {\n            username: user.username\n          }\n        });\n        \n        setQuizTitles(response.data.\n          quizTitles\n           || []);\n      }else{\n        console.log(\"plesse log in first\");\n      }\n\n      \n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n\n  \n  const fetchQuiz = async (titleToRetrieve,username)=>{\n    try {\n\n      if(user){\n        await axios.post(`${backend}/gpt/get-quiz`, {titleToRetrieve,username});\n      }else{\n        console.log(\"please log in \")\n      }\n\n\n          \n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  }\n\n  const handleQuestionClick = (title)=>{\n      console.log(title)\n      fetchQuiz(title,user.username)\n  }\n\n\n  return (\n    <div className=\"flex flex-col lg:flex-row pt-32\"> {/* Added padding-top */}\n      <div className=\"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n        <ul>\n          {QuizTitles.map((title, index) => (\n            <li key={index} onClick={()=>handleQuestionClick(title)} className=\"p-2 border-b border-gray-300\">\n              {title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\">\n        <QuestionComponent/>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionLayout;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,IAAIC,OAAO,GAAG,uBAAuB;AACrC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,IAAI,GAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EAE9Dd,SAAS,CAAC,MAAM;IAEde,WAAW,CAAC,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MAEF,IAAGL,IAAI,EAAC;QACN,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGZ,OAAO,iBAAiB,EAAE;UAC5Da,MAAM,EAAE;YACNC,QAAQ,EAAET,IAAI,CAACS;UACjB;QACF,CAAC,CAAC;QAEFV,aAAa,CAACO,QAAQ,CAACI,IAAI,CACzBC,UAAU,IACN,EAAE,CAAC;MACX,CAAC,MAAI;QACHC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC;IAGF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAGD,MAAMC,SAAS,GAAG,MAAAA,CAAOC,eAAe,EAACP,QAAQ,KAAG;IAClD,IAAI;MAEF,IAAGT,IAAI,EAAC;QACN,MAAMR,KAAK,CAACyB,IAAI,CAAC,GAAGtB,OAAO,eAAe,EAAE;UAACqB,eAAe;UAACP;QAAQ,CAAC,CAAC;MACzE,CAAC,MAAI;QACHG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IAIF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMI,mBAAmB,GAAIC,KAAK,IAAG;IACjCP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IAClBJ,SAAS,CAACI,KAAK,EAACnB,IAAI,CAACS,QAAQ,CAAC;EAClC,CAAC;EAGD,oBACEf,OAAA;IAAK0B,SAAS,EAAC,iCAAiC;IAAAC,QAAA,GAAC,GAAC,eAChD3B,OAAA;MAAK0B,SAAS,EAAC,0FAA0F;MAAAC,QAAA,gBACvG3B,OAAA;QAAI0B,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3D/B,OAAA;QAAA2B,QAAA,EACGvB,UAAU,CAAC4B,GAAG,CAAC,CAACP,KAAK,EAAEQ,KAAK,kBAC3BjC,OAAA;UAAgBkC,OAAO,EAAEA,CAAA,KAAIV,mBAAmB,CAACC,KAAK,CAAE;UAACC,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EAC9FF;QAAK,GADCQ,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACN/B,OAAA;MAAK0B,SAAS,EAAC,gDAAgD;MAAAC,QAAA,eAC7D3B,OAAA,CAACH,iBAAiB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3EID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA6EpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}