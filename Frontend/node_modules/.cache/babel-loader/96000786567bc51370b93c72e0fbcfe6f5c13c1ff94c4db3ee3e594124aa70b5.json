{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/Question.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const Question = () => {\n//   const location = useLocation();\n//   const { questions } = location.state || {};\n//   const [selectedValues, setSelectedValues] = useState({});\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (questionIndex, value) => {\n//     setSelectedValues({ ...selectedValues, [questionIndex]: value });\n//   };\n\n//   const handleSubmit = () => {\n//     setSubmitted(true);\n//   };\n\n//   return (\n//     // <div className=\"relative flex flex-col md:flex-row justify-center items-start min-h-screen bg-gray-100 p-4\">\n//     //   <div className=\"flex flex-col p-4 bg-white text-black rounded-lg shadow-lg w-full max-w-2xl\">\n//     //     {questions.map((q, index) => (\n//     //       <div key={index} className=\"mb-8 w-full\">\n//     //         <div className=\"flex items-center justify-between mb-2 w-full\">\n//     //           <div className=\"text-lg font-extrabold text-gray-800\">{q.question}</div>\n//     //           <div className=\"bg-black text-white p-1 rounded text-xs font-semibold\">Question {index + 1}</div>\n//     //         </div>\n//     //         <div className=\"flex flex-col w-full\">\n//     //           {q.options.map((option, optIndex) => (\n//     //             <div key={optIndex}>\n//     //               <input\n//     //                 type=\"radio\"\n//     //                 id={`q${index}-value-${optIndex}`}\n//     //                 name={`quiz-${index}`}\n//     //                 value={option}\n//     //                 className=\"hidden\"\n//     //                 onChange={() => handleChange(index, option)}\n//     //               />\n//     //               <label\n//     //                 htmlFor={`q${index}-value-${optIndex}`}\n//     //                 className={`flex bg-white p-3 mt-2 text-sm font-semibold rounded-lg cursor-pointer border ${selectedValues[index] === option ? 'border-red-500 text-red-500' : 'border-gray-200'}`}\n//     //               >\n//     //                 {option}\n//     //               </label>\n//     //             </div>\n//     //           ))}\n//     //         </div>\n//     //         {submitted && (\n//     //           <div className={`mt-2 font-semibold text-xs transition-all ${selectedValues[index] === q.answer ? 'text-green-500 flex' : 'hidden'}`}>\n//     //             Success!\n//     //           </div>\n//     //         )}\n//     //         {submitted && selectedValues[index] && selectedValues[index] !== q.answer && (\n//     //           <div className={`mt-2 font-semibold text-xs transition-all text-red-500 flex`}>\n//     //             Error! The correct answer is {q.answer}.\n//     //           </div>\n//     //         )}\n//     //       </div>\n//     //     ))}\n\n//     //     <button\n//     //       onClick={handleSubmit}\n//     //       className=\"mt-4 p-2 bg-blue-500 text-white rounded-lg font-semibold\"\n//     //     >\n//     //       Submit\n//     //     </button>\n//     //   </div>\n//     // </div>\n\n//     <div className=\"flex h-screen\">\n//     <div className=\"w-1/4 bg-blue-500 p-4\">\n//       {/* Left Container Content */}\n\n//     </div>\n//     <div className=\"w-3/4 bg-gray-300 p-4\">\n//       {/* Right Container Content */}\n//       <h2>Right Container</h2>\n//       <p>This is the right container, larger than the left one.</p>\n//     </div>\n//   </div>\n\n//   );\n// };\n\n// export default Question;\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  type: 'mcq',\n  question: 'What is the capital of France?',\n  options: ['Paris', 'London', 'Berlin', 'Madrid'],\n  answer: 'Paris'\n}, {\n  type: 'text',\n  question: 'What is 2 + 2?',\n  answer: '4'\n}\n// Add more questions as needed\n];\nconst QuizComponent = () => {\n  _s();\n  // const location = useLocation();\n  // const { questions } = location.state || {};\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const handleNext = () => {\n    if (!userAnswers[currentQuestionIndex]) {\n      setShowWarning(true);\n    } else {\n      setShowWarning(false);\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        setShowResults(true);\n      }\n    }\n  };\n  const handleAnswerChange = e => {\n    setUserAnswers({\n      ...userAnswers,\n      [currentQuestionIndex]: e.target.value\n    });\n    setShowWarning(false); // Reset warning when user inputs an answer\n  };\n  const calculateScore = () => {\n    return questions.reduce((score, question, index) => {\n      if (question.answer === userAnswers[index]) {\n        return score + 1;\n      }\n      return score;\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center bg-white bg-opacity-90 backdrop-blur-sm p-6 rounded-lg shadow-lg max-w-md w-full\",\n      children: !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-2\",\n            children: [\"Question \", currentQuestionIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg\",\n            children: questions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), questions[currentQuestionIndex].type === 'mcq' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col mb-4\",\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestionIndex}`,\n              value: option,\n              onChange: handleAnswerChange,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAnswers[currentQuestionIndex] || '',\n            onChange: handleAnswerChange,\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), showWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mb-4\",\n          children: \"Please provide an answer before proceeding.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Your Score: \", calculateScore(), \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg\",\n              children: [index + 1, \". \", question.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm ${question.answer === userAnswers[index] ? 'text-green-500' : 'text-red-500'}`,\n              children: [\"Your Answer: \", userAnswers[index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), question.answer !== userAnswers[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-blue-500\",\n              children: [\"Correct Answer: \", question.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"UXfufkv1a+WU4457xQ2tXK5rkcY=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","questions","type","question","options","answer","QuizComponent","_s","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","showResults","setShowResults","showWarning","setShowWarning","handleNext","length","handleAnswerChange","e","target","value","calculateScore","reduce","score","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","name","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/Question.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const Question = () => {\n//   const location = useLocation();\n//   const { questions } = location.state || {};\n//   const [selectedValues, setSelectedValues] = useState({});\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (questionIndex, value) => {\n//     setSelectedValues({ ...selectedValues, [questionIndex]: value });\n//   };\n\n//   const handleSubmit = () => {\n//     setSubmitted(true);\n//   };\n\n//   return (\n//     // <div className=\"relative flex flex-col md:flex-row justify-center items-start min-h-screen bg-gray-100 p-4\">\n//     //   <div className=\"flex flex-col p-4 bg-white text-black rounded-lg shadow-lg w-full max-w-2xl\">\n//     //     {questions.map((q, index) => (\n//     //       <div key={index} className=\"mb-8 w-full\">\n//     //         <div className=\"flex items-center justify-between mb-2 w-full\">\n//     //           <div className=\"text-lg font-extrabold text-gray-800\">{q.question}</div>\n//     //           <div className=\"bg-black text-white p-1 rounded text-xs font-semibold\">Question {index + 1}</div>\n//     //         </div>\n//     //         <div className=\"flex flex-col w-full\">\n//     //           {q.options.map((option, optIndex) => (\n//     //             <div key={optIndex}>\n//     //               <input\n//     //                 type=\"radio\"\n//     //                 id={`q${index}-value-${optIndex}`}\n//     //                 name={`quiz-${index}`}\n//     //                 value={option}\n//     //                 className=\"hidden\"\n//     //                 onChange={() => handleChange(index, option)}\n//     //               />\n//     //               <label\n//     //                 htmlFor={`q${index}-value-${optIndex}`}\n//     //                 className={`flex bg-white p-3 mt-2 text-sm font-semibold rounded-lg cursor-pointer border ${selectedValues[index] === option ? 'border-red-500 text-red-500' : 'border-gray-200'}`}\n//     //               >\n//     //                 {option}\n//     //               </label>\n//     //             </div>\n//     //           ))}\n//     //         </div>\n//     //         {submitted && (\n//     //           <div className={`mt-2 font-semibold text-xs transition-all ${selectedValues[index] === q.answer ? 'text-green-500 flex' : 'hidden'}`}>\n//     //             Success!\n//     //           </div>\n//     //         )}\n//     //         {submitted && selectedValues[index] && selectedValues[index] !== q.answer && (\n//     //           <div className={`mt-2 font-semibold text-xs transition-all text-red-500 flex`}>\n//     //             Error! The correct answer is {q.answer}.\n//     //           </div>\n//     //         )}\n//     //       </div>\n//     //     ))}\n        \n//     //     <button\n//     //       onClick={handleSubmit}\n//     //       className=\"mt-4 p-2 bg-blue-500 text-white rounded-lg font-semibold\"\n//     //     >\n//     //       Submit\n//     //     </button>\n//     //   </div>\n//     // </div>\n\n//     <div className=\"flex h-screen\">\n//     <div className=\"w-1/4 bg-blue-500 p-4\">\n//       {/* Left Container Content */}\n          \n\n\n\n\n\n\n//     </div>\n//     <div className=\"w-3/4 bg-gray-300 p-4\">\n//       {/* Right Container Content */}\n//       <h2>Right Container</h2>\n//       <p>This is the right container, larger than the left one.</p>\n//     </div>\n//   </div>\n\n\n//   );\n// };\n\n// export default Question;\n\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst questions = [\n  {\n    type: 'mcq',\n    question: 'What is the capital of France?',\n    options: ['Paris', 'London', 'Berlin', 'Madrid'],\n    answer: 'Paris',\n  },\n  {\n    type: 'text',\n    question: 'What is 2 + 2?',\n    answer: '4',\n  },\n  // Add more questions as needed\n];\n\nconst QuizComponent = () => {\n  // const location = useLocation();\n  // const { questions } = location.state || {};\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n\n  const handleNext = () => {\n    if (!userAnswers[currentQuestionIndex]) {\n      setShowWarning(true);\n    } else {\n      setShowWarning(false);\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        setShowResults(true);\n      }\n    }\n  };\n\n  const handleAnswerChange = (e) => {\n    setUserAnswers({\n      ...userAnswers,\n      [currentQuestionIndex]: e.target.value,\n    });\n    setShowWarning(false); // Reset warning when user inputs an answer\n  };\n\n  const calculateScore = () => {\n    return questions.reduce((score, question, index) => {\n      if (question.answer === userAnswers[index]) {\n        return score + 1;\n      }\n      return score;\n    }, 0);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"flex items-center justify-center bg-white bg-opacity-90 backdrop-blur-sm p-6 rounded-lg shadow-lg max-w-md w-full\">\n        {!showResults ? (\n          <div className=\"w-full\">\n            <div className=\"mb-4\">\n              <h2 className=\"text-xl font-bold mb-2\">\n                Question {currentQuestionIndex + 1}:\n              </h2>\n              <p className=\"text-lg\">{questions[currentQuestionIndex].question}</p>\n            </div>\n            {questions[currentQuestionIndex].type === 'mcq' ? (\n              <div className=\"flex flex-col mb-4\">\n                {questions[currentQuestionIndex].options.map((option, index) => (\n                  <label key={index} className=\"mb-2\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${currentQuestionIndex}`}\n                      value={option}\n                      onChange={handleAnswerChange}\n                      className=\"mr-2\"\n                    />\n                    {option}\n                  </label>\n                ))}\n              </div>\n            ) : (\n              <div className=\"mb-4\">\n                <input\n                  type=\"text\"\n                  value={userAnswers[currentQuestionIndex] || ''}\n                  onChange={handleAnswerChange}\n                  className=\"w-full p-2 border rounded\"\n                />\n              </div>\n            )}\n            {showWarning && (\n              <div className=\"text-red-500 mb-4\">Please provide an answer before proceeding.</div>\n            )}\n            <div className=\"flex justify-end\">\n              <button\n                onClick={handleNext}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"w-full\">\n            <h2 className=\"text-xl font-bold mb-4\">Quiz Results</h2>\n            <p className=\"text-lg mb-4\">Your Score: {calculateScore()} / {questions.length}</p>\n            <div>\n              {questions.map((question, index) => (\n                <div key={index} className=\"mb-4\">\n                  <p className=\"text-lg\">\n                    {index + 1}. {question.question}\n                  </p>\n                  <p className={`text-sm ${question.answer === userAnswers[index] ? 'text-green-500' : 'text-red-500'}`}>\n                    Your Answer: {userAnswers[index]}\n                  </p>\n                  {question.answer !== userAnswers[index] && (\n                    <p className=\"text-sm text-blue-500\">Correct Answer: {question.answer}</p>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizComponent;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}