{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// let backend = 'https://chatbot-backend-phi.vercel.app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet backend = \"http://localhost:8000\";\nexport default function CustomGPT() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const sendMessage = async () => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'User',\n      text: message\n    }]);\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: message\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: 'Bot',\n        text: data.message\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setMessage(\"\");\n    }\n  };\n  const sendCustomData = async customData => {\n    const response = await fetch(`${backend}/gpt/upload-data`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: customData\n      })\n    });\n    const data = await response.json();\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'Bot',\n      text: data.message\n    }]);\n  };\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    if (file.type === 'application/pdf') {\n      extractTextFromPDF(file);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n  const extractTextFromPDF = file => {\n    // Your code for extracting text from PDF goes here\n  };\n  const extractTextFromTXT = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n      };\n      reader.onprogress = data => {\n        if (data.lengthComputable) {\n          const progress = Math.round(data.loaded / data.total * 100);\n          setUploadProgress(progress);\n        }\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        console.log(reader.result);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Centered Container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: \"This container is centered on the screen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this)\n\n  // <div className=\"flex flex-col h-[calc(100vh-7rem)] mt-8 w-full md:w-3/5 mx-auto p-4 border rounded shadow-md\">\n  //   {!fileUploaded ? (\n  //     <div className=\"flex flex-col items-center justify-center h-full\">\n  //       <label className=\"flex flex-col items-center px-4 py-6 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150\">\n  //         <svg\n  //           className=\"w-8 h-8\"\n  //           fill=\"currentColor\"\n  //           xmlns=\"http://www.w3.org/2000/svg\"\n  //           viewBox=\"0 0 20 20\"\n  //         >\n  //           <path d=\"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\" />\n  //         </svg>\n  //         <span className=\"mt-2 text-base leading-normal\">Upload File</span>\n  //         <input type=\"file\" className=\"hidden\" onChange={handleUploadFile} />\n  //       </label>\n  //       {uploadProgress > 0 && (\n  //         <div className=\"w-full bg-gray-200 rounded-full mt-4\">\n  //           <div\n  //             className=\"bg-blue-500 text-xs leading-none py-1 text-center text-white rounded-full\"\n  //             style={{ width: `${uploadProgress}%` }}\n  //           >\n  //             {uploadProgress}%\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //   ) : (\n  //     <>\n  //       <div className=\"flex flex-col flex-grow h-72 p-4 overflow-y-auto bg-gray-100 rounded\">\n  //         {messages.map((msg, index) => (\n  //           <div\n  //             key={index}\n  //             className={`flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`}\n  //           >\n  //             <div\n  //               className={`${\n  //                 msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"\n  //               } p-2 rounded max-w-xs`}\n  //             >\n  //               {msg.text}\n  //             </div>\n  //           </div>\n  //         ))}\n  //       </div>\n  //       <div className=\"mt-4 flex\">\n  //         <input\n  //           type=\"text\"\n  //           className=\"flex-grow p-2 border border-gray-300 rounded\"\n  //           value={message}\n  //           onChange={(e) => setMessage(e.target.value)}\n  //           placeholder=\"Type your message...\"\n  //         />\n  //         <button onClick={sendMessage} className=\"ml-2 p-2 bg-blue-500 text-white rounded\">\n  //           Send\n  //         </button>\n  //       </div>\n  //     </>\n  //   )}\n  // </div>\n  ;\n}\n_s(CustomGPT, \"73s4Ak7nVDnDWvy9N7K8zU0Ex0k=\");\n_c = CustomGPT;\nvar _c;\n$RefreshReg$(_c, \"CustomGPT\");","map":{"version":3,"names":["React","useState","pdfjsLib","jsxDEV","_jsxDEV","backend","CustomGPT","_s","messages","setMessages","message","setMessage","fileUploaded","setFileUploaded","uploadProgress","setUploadProgress","sendMessage","prevMessages","user","text","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","sendCustomData","customData","handleUploadFile","event","file","target","files","type","extractTextFromPDF","extractTextFromTXT","alert","reader","FileReader","onloadstart","onprogress","lengthComputable","progress","Math","round","loaded","total","onloadend","log","result","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// let backend = 'https://chatbot-backend-phi.vercel.app';\nlet backend =\"http://localhost:8000\";\n\nexport default function CustomGPT() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const sendMessage = async () => {\n    setMessages((prevMessages) => [...prevMessages, { user: 'User', text: message }]);\n\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: message }),\n      });\n\n      const data = await response.json();\n\n      setMessages((prevMessages) => [...prevMessages, { user: 'Bot', text: data.message }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setMessage(\"\");\n    }\n  };\n\n  const sendCustomData = async (customData) => {\n    const response = await fetch(`${backend}/gpt/upload-data`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ data: customData }),\n    });\n    const data = await response.json();\n    setMessages((prevMessages) => [...prevMessages, { user: 'Bot', text: data.message }]);\n  };\n\n  const handleUploadFile = (event) => {\n    const file = event.target.files[0];\n    \n    if (file.type === 'application/pdf') {\n       extractTextFromPDF(file);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n\n  const extractTextFromPDF = (file) => {\n    // Your code for extracting text from PDF goes here\n  };\n\n  const extractTextFromTXT = (file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n      };\n      reader.onprogress = (data) => {\n        if (data.lengthComputable) {\n          const progress = Math.round((data.loaded / data.total) * 100);\n          setUploadProgress(progress);\n        }\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        console.log(reader.result);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n    <div className=\"bg-white p-8 rounded-lg shadow-md\">\n      <h1 className=\"text-2xl font-bold mb-4\">Centered Container</h1>\n      <p className=\"text-gray-700\">This container is centered on the screen.</p>\n    </div>\n  </div>\n\n\n\n\n    // <div className=\"flex flex-col h-[calc(100vh-7rem)] mt-8 w-full md:w-3/5 mx-auto p-4 border rounded shadow-md\">\n    //   {!fileUploaded ? (\n    //     <div className=\"flex flex-col items-center justify-center h-full\">\n    //       <label className=\"flex flex-col items-center px-4 py-6 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150\">\n    //         <svg\n    //           className=\"w-8 h-8\"\n    //           fill=\"currentColor\"\n    //           xmlns=\"http://www.w3.org/2000/svg\"\n    //           viewBox=\"0 0 20 20\"\n    //         >\n    //           <path d=\"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\" />\n    //         </svg>\n    //         <span className=\"mt-2 text-base leading-normal\">Upload File</span>\n    //         <input type=\"file\" className=\"hidden\" onChange={handleUploadFile} />\n    //       </label>\n    //       {uploadProgress > 0 && (\n    //         <div className=\"w-full bg-gray-200 rounded-full mt-4\">\n    //           <div\n    //             className=\"bg-blue-500 text-xs leading-none py-1 text-center text-white rounded-full\"\n    //             style={{ width: `${uploadProgress}%` }}\n    //           >\n    //             {uploadProgress}%\n    //           </div>\n    //         </div>\n    //       )}\n    //     </div>\n    //   ) : (\n    //     <>\n    //       <div className=\"flex flex-col flex-grow h-72 p-4 overflow-y-auto bg-gray-100 rounded\">\n    //         {messages.map((msg, index) => (\n    //           <div\n    //             key={index}\n    //             className={`flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`}\n    //           >\n    //             <div\n    //               className={`${\n    //                 msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"\n    //               } p-2 rounded max-w-xs`}\n    //             >\n    //               {msg.text}\n    //             </div>\n    //           </div>\n    //         ))}\n    //       </div>\n    //       <div className=\"mt-4 flex\">\n    //         <input\n    //           type=\"text\"\n    //           className=\"flex-grow p-2 border border-gray-300 rounded\"\n    //           value={message}\n    //           onChange={(e) => setMessage(e.target.value)}\n    //           placeholder=\"Type your message...\"\n    //         />\n    //         <button onClick={sendMessage} className=\"ml-2 p-2 bg-blue-500 text-white rounded\">\n    //           Send\n    //         </button>\n    //       </div>\n    //     </>\n    //   )}\n    // </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}