{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function AuthForm() {\n//   let backend = \"http://localhost:8000/\";\n//   const navigate = useNavigate();\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (isSignup) {\n//       if (password.length < 7) {\n//         setErrorMessage('Password must be at least 7 characters long');\n//         return;\n//       }\n//       if (password !== confirmPassword) {\n//         setErrorMessage('Passwords do not match');\n//         return;\n//       }\n//     }\n//     setLoading(true);\n//     const url = isSignup ? `${backend}auth/signup` : `${backend}auth/signin`;\n//     try {\n//       const res = await axios.post(url, { username, password });\n//       localStorage.setItem(\"profile-prepGPT\", JSON.stringify({ username: res.data.username }));\n//       setErrorMessage(''); // Clear any previous error messages\n//       setLoading(false);\n//       window.location.reload(); // Refresh the page\n//       navigate('/'); // Redirect to home page\n//     } catch (err) {\n//       setErrorMessage(err.response.data.message || 'An error occurred');\n//       setLoading(false);\n//     }\n//   };\n\n//   const toggleForm = () => {\n//     setIsSignup(!isSignup);\n//     setErrorMessage(''); // Clear any error messages when toggling forms\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const toggleConfirmPasswordVisibility = () => {\n//     setShowConfirmPassword(!showConfirmPassword);\n//   };\n\n//   return (\n//     <div className=\"flex items-center justify-center min-h-screen bg-transparent\">\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white bg-opacity-90 rounded-lg shadow-md z-20\">\n//         <h2 className=\"text-2xl font-bold text-center text-gray-900\">\n//           {isSignup ? 'Sign Up' : 'Sign In'}\n//         </h2>\n//         <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n//           <div className=\"relative\">\n//             <div className=\"relative\">\n//               <input\n//                 placeholder='username'\n//                 className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                 id=\"username\"\n//                 type=\"text\"\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"relative\">\n//             <div className=\"relative\">\n//               <input\n//                 placeholder='password'\n//                 className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                 id=\"password\"\n//                 type={showPassword ? 'text' : 'password'}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//               />\n//               <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4 cursor-pointer\" onClick={togglePasswordVisibility}>\n//                 <svg\n//                   stroke=\"currentColor\"\n//                   viewBox=\"0 0 24 24\"\n//                   fill=\"none\"\n//                   className=\"h-6 w-6 text-gray-400\"\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                 >\n//                   <path\n//                     d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n//                     strokeWidth=\"2\"\n//                     strokeLinejoin=\"round\"\n//                     strokeLinecap=\"round\"\n//                   ></path>\n//                   <path\n//                     d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n//                     strokeWidth=\"2\"\n//                     strokeLinejoin=\"round\"\n//                     strokeLinecap=\"round\"\n//                   ></path>\n//                 </svg>\n//               </span>\n//             </div>\n//           </div>\n//           {isSignup && (\n//             <div className=\"relative\">\n//               <div className=\"relative\">\n//                 <input\n//                   placeholder='confirm password'\n//                   className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                   id=\"confirm-password\"\n//                   type={showConfirmPassword ? 'text' : 'password'}\n//                   onChange={(e) => setConfirmPassword(e.target.value)}\n//                   required\n//                 />\n//                 <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4 cursor-pointer\" onClick={toggleConfirmPasswordVisibility}>\n//                   <svg\n//                     stroke=\"currentColor\"\n//                     viewBox=\"0 0 24 24\"\n//                     fill=\"none\"\n//                     className=\"h-6 w-6 text-gray-400\"\n//                     xmlns=\"http://www.w3.org/2000/svg\"\n//                   >\n//                     <path\n//                       d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n//                       strokeWidth=\"2\"\n//                       strokeLinejoin=\"round\"\n//                       strokeLinecap=\"round\"\n//                     ></path>\n//                     <path\n//                       d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n//                       strokeWidth=\"2\"\n//                       strokeLinejoin=\"round\"\n//                       strokeLinecap=\"round\"\n//                     ></path>\n//                   </svg>\n//                 </span>\n//               </div>\n//             </div>\n//           )}\n//           <div className=\"flex items-center justify-between\">\n//             <button\n//               type=\"submit\"\n//               disabled={loading}\n//               className={`inline-flex items-center justify-center w-full px-4 py-2 text-sm font-medium text-white ${loading ? 'bg-gray-500' : 'bg-blue-600'} border border-transparent rounded-md shadow-sm ${loading ? '' : 'hover:bg-blue-500'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}\n//             >\n//               {loading ? 'Loading...' : (isSignup ? 'Sign Up' : 'Sign In')}\n//             </button>\n//           </div>\n//           {errorMessage && (\n//             <div className=\"mt-2 text-sm font-medium text-red-600 text-center\">\n//               {errorMessage}\n//             </div>\n//           )}\n//           <div className=\"flex items-center justify-center mt-4\">\n//             <button\n//               type=\"button\"\n//               onClick={toggleForm}\n//               className=\"text-sm font-medium text-blue-600 hover:underline\"\n//             >\n//               {isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/AuthForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function AuthForm() {\n//   let backend = \"http://localhost:8000/\";\n//   const navigate = useNavigate();\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (isSignup) {\n//       if (password.length < 7) {\n//         setErrorMessage('Password must be at least 7 characters long');\n//         return;\n//       }\n//       if (password !== confirmPassword) {\n//         setErrorMessage('Passwords do not match');\n//         return;\n//       }\n//     }\n//     setLoading(true);\n//     const url = isSignup ? `${backend}auth/signup` : `${backend}auth/signin`;\n//     try {\n//       const res = await axios.post(url, { username, password });\n//       localStorage.setItem(\"profile-prepGPT\", JSON.stringify({ username: res.data.username }));\n//       setErrorMessage(''); // Clear any previous error messages\n//       setLoading(false);\n//       window.location.reload(); // Refresh the page\n//       navigate('/'); // Redirect to home page\n//     } catch (err) {\n//       setErrorMessage(err.response.data.message || 'An error occurred');\n//       setLoading(false);\n//     }\n//   };\n\n//   const toggleForm = () => {\n//     setIsSignup(!isSignup);\n//     setErrorMessage(''); // Clear any error messages when toggling forms\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const toggleConfirmPasswordVisibility = () => {\n//     setShowConfirmPassword(!showConfirmPassword);\n//   };\n\n//   return (\n//     <div className=\"flex items-center justify-center min-h-screen bg-transparent\">\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white bg-opacity-90 rounded-lg shadow-md z-20\">\n//         <h2 className=\"text-2xl font-bold text-center text-gray-900\">\n//           {isSignup ? 'Sign Up' : 'Sign In'}\n//         </h2>\n//         <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n//           <div className=\"relative\">\n//             <div className=\"relative\">\n//               <input\n//                 placeholder='username'\n//                 className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                 id=\"username\"\n//                 type=\"text\"\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"relative\">\n//             <div className=\"relative\">\n//               <input\n//                 placeholder='password'\n//                 className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                 id=\"password\"\n//                 type={showPassword ? 'text' : 'password'}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 required\n//               />\n//               <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4 cursor-pointer\" onClick={togglePasswordVisibility}>\n//                 <svg\n//                   stroke=\"currentColor\"\n//                   viewBox=\"0 0 24 24\"\n//                   fill=\"none\"\n//                   className=\"h-6 w-6 text-gray-400\"\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                 >\n//                   <path\n//                     d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n//                     strokeWidth=\"2\"\n//                     strokeLinejoin=\"round\"\n//                     strokeLinecap=\"round\"\n//                   ></path>\n//                   <path\n//                     d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n//                     strokeWidth=\"2\"\n//                     strokeLinejoin=\"round\"\n//                     strokeLinecap=\"round\"\n//                   ></path>\n//                 </svg>\n//               </span>\n//             </div>\n//           </div>\n//           {isSignup && (\n//             <div className=\"relative\">\n//               <div className=\"relative\">\n//                 <input\n//                   placeholder='confirm password'\n//                   className=\"w-full rounded-lg border-gray-300 p-4 pe-12 text-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\n//                   id=\"confirm-password\"\n//                   type={showConfirmPassword ? 'text' : 'password'}\n//                   onChange={(e) => setConfirmPassword(e.target.value)}\n//                   required\n//                 />\n//                 <span className=\"absolute inset-y-0 end-0 grid place-content-center px-4 cursor-pointer\" onClick={toggleConfirmPasswordVisibility}>\n//                   <svg\n//                     stroke=\"currentColor\"\n//                     viewBox=\"0 0 24 24\"\n//                     fill=\"none\"\n//                     className=\"h-6 w-6 text-gray-400\"\n//                     xmlns=\"http://www.w3.org/2000/svg\"\n//                   >\n//                     <path\n//                       d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n//                       strokeWidth=\"2\"\n//                       strokeLinejoin=\"round\"\n//                       strokeLinecap=\"round\"\n//                     ></path>\n//                     <path\n//                       d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n//                       strokeWidth=\"2\"\n//                       strokeLinejoin=\"round\"\n//                       strokeLinecap=\"round\"\n//                     ></path>\n//                   </svg>\n//                 </span>\n//               </div>\n//             </div>\n//           )}\n//           <div className=\"flex items-center justify-between\">\n//             <button\n//               type=\"submit\"\n//               disabled={loading}\n//               className={`inline-flex items-center justify-center w-full px-4 py-2 text-sm font-medium text-white ${loading ? 'bg-gray-500' : 'bg-blue-600'} border border-transparent rounded-md shadow-sm ${loading ? '' : 'hover:bg-blue-500'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}\n//             >\n//               {loading ? 'Loading...' : (isSignup ? 'Sign Up' : 'Sign In')}\n//             </button>\n//           </div>\n//           {errorMessage && (\n//             <div className=\"mt-2 text-sm font-medium text-red-600 text-center\">\n//               {errorMessage}\n//             </div>\n//           )}\n//           <div className=\"flex items-center justify-center mt-4\">\n//             <button\n//               type=\"button\"\n//               onClick={toggleForm}\n//               className=\"text-sm font-medium text-blue-600 hover:underline\"\n//             >\n//               {isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}