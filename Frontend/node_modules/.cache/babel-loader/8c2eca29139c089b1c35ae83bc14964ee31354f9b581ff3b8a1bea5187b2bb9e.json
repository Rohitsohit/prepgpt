{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import QuestionComponent from './QuestionComponent';\n// import axios from 'axios';\n\n// // Backend URL\n// let backend = 'http://localhost:8000';\n\n// const QuestionLayout = () => {\n//   // State variables\n//   const [QuizTitles, setQuizTitles] = useState([]);\n//   const [quizData, setQuizData] = useState(null);\n//   const [loading, setLoading] = useState(true); // Loading state\n//   const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n//   // Fetch quiz titles when the component mounts and user is available\n//   useEffect(() => {\n//     if (user) {\n//       fetchTitles();\n//     }\n//   }, []);\n\n//   // Fetch existing quiz titles from the backend\n//   const fetchTitles = async () => {\n//     try {\n//       const response = await axios.get(`${backend}/gpt/getallquiz`, {\n//         params: {\n//           username: user.username\n//         }\n//       });\n//       setQuizTitles(response.data.quizTitles || []);\n//     } catch (error) {\n//       console.error('Error fetching quiz data:', error);\n//     } finally {\n//       setLoading(false); // Set loading to false after fetching\n//     }\n//   };\n\n//   // Fetch a specific quiz from the backend\n//   const fetchQuiz = async (titleToRetrieve, username) => {\n//     try {\n//       if (user) {\n//         const res = await axios.post(`${backend}/gpt/get-quiz`, { titleToRetrieve, username });\n\n//         const parsedQuizData = res.data.quizQuestions.map(question => JSON.parse(question.question));\n//         setQuizData(parsedQuizData);\n//          // Update the state with the fetched quiz data\n//       } else {\n//         console.log(\"Please log in\");\n//       }\n//     } catch (error) {\n//       console.error('Error fetching quiz data:', error);\n//     }\n//   };\n\n//   // Handle click on a quiz title to fetch its questions\n//   const handleQuestionClick = (title) => {\n//     fetchQuiz(title, user.username);\n//   };\n\n//   // Render the layout\n//   return (\n//     <div className=\"relative flex justify-center items-center min-h-screen bg-animation\">\n//       <div className=\"flex flex-col lg:flex-row w-full lg:w-3/4 px-4\">\n//         <div className=\"w-full lg:w-2/5 p-4 overflow-y-auto h-96 bg-white bg-opacity-85 shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n//           <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n//           {user ? (\n//             loading ? (\n//               <p>Loading...</p>\n//             ) : (\n//               <ul>\n//                 {QuizTitles.map((title, index) => (\n//                   <li key={index} onClick={() => handleQuestionClick(title)} className=\"p-2 border-b border-gray-300 cursor-pointer\">\n//                     {title}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )\n//           ) : (\n//             <p>Need to login to get the saved questions</p>\n//           )}\n//         </div>\n//         <div className=\"w-full lg:w-3/5 p-4 h-96 overflow-y-auto bg-white bg-opacity-85 shadow-md rounded\">\n//           <QuestionComponent quizData={quizData} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default QuestionLayout;","map":{"version":3,"names":[],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuizGPT/QuestionLayout.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import QuestionComponent from './QuestionComponent';\n// import axios from 'axios';\n\n// // Backend URL\n// let backend = 'http://localhost:8000';\n\n// const QuestionLayout = () => {\n//   // State variables\n//   const [QuizTitles, setQuizTitles] = useState([]);\n//   const [quizData, setQuizData] = useState(null);\n//   const [loading, setLoading] = useState(true); // Loading state\n//   const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n//   // Fetch quiz titles when the component mounts and user is available\n//   useEffect(() => {\n//     if (user) {\n//       fetchTitles();\n//     }\n//   }, []);\n\n//   // Fetch existing quiz titles from the backend\n//   const fetchTitles = async () => {\n//     try {\n//       const response = await axios.get(`${backend}/gpt/getallquiz`, {\n//         params: {\n//           username: user.username\n//         }\n//       });\n//       setQuizTitles(response.data.quizTitles || []);\n//     } catch (error) {\n//       console.error('Error fetching quiz data:', error);\n//     } finally {\n//       setLoading(false); // Set loading to false after fetching\n//     }\n//   };\n\n//   // Fetch a specific quiz from the backend\n//   const fetchQuiz = async (titleToRetrieve, username) => {\n//     try {\n//       if (user) {\n//         const res = await axios.post(`${backend}/gpt/get-quiz`, { titleToRetrieve, username });\n       \n//         const parsedQuizData = res.data.quizQuestions.map(question => JSON.parse(question.question));\n//         setQuizData(parsedQuizData);\n//          // Update the state with the fetched quiz data\n//       } else {\n//         console.log(\"Please log in\");\n//       }\n//     } catch (error) {\n//       console.error('Error fetching quiz data:', error);\n//     }\n//   };\n\n//   // Handle click on a quiz title to fetch its questions\n//   const handleQuestionClick = (title) => {\n//     fetchQuiz(title, user.username);\n//   };\n\n//   // Render the layout\n//   return (\n//     <div className=\"relative flex justify-center items-center min-h-screen bg-animation\">\n//       <div className=\"flex flex-col lg:flex-row w-full lg:w-3/4 px-4\">\n//         <div className=\"w-full lg:w-2/5 p-4 overflow-y-auto h-96 bg-white bg-opacity-85 shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n//           <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n//           {user ? (\n//             loading ? (\n//               <p>Loading...</p>\n//             ) : (\n//               <ul>\n//                 {QuizTitles.map((title, index) => (\n//                   <li key={index} onClick={() => handleQuestionClick(title)} className=\"p-2 border-b border-gray-300 cursor-pointer\">\n//                     {title}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )\n//           ) : (\n//             <p>Need to login to get the saved questions</p>\n//           )}\n//         </div>\n//         <div className=\"w-full lg:w-3/5 p-4 h-96 overflow-y-auto bg-white bg-opacity-85 shadow-md rounded\">\n//           <QuestionComponent quizData={quizData} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default QuestionLayout;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}