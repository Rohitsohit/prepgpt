{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuizGPT/QuestionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SaveQuizModal from './SaveWindow'; // Import the modal component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionComponent = ({\n  quizData\n}) => {\n  _s();\n  const location = useLocation();\n  let {\n    questions\n  } = location.state || {};\n  const {\n    isQuestion\n  } = location.state || {};\n  console.log(questions);\n\n  // State variables\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [preciseQuestion, setPreciseQuestion] = useState();\n\n  // Retrieve user profile from local storage\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n  // Reset to the first question when quizData changes\n  useEffect(() => {\n    if (quizData) {\n      console.log(\"inside quizdata\");\n      setCurrentQuestionIndex(0);\n      questions = quizData;\n    }\n    console.log(questions);\n  }, [quizData]);\n\n  // Handle next button click\n  const handleNext = () => {\n    // Show warning if no answer is selected\n    if (!userAnswers[currentQuestionIndex]) {\n      setShowWarning(true);\n    } else {\n      setShowWarning(false);\n      // Move to the next question or show results if it's the last question\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        setShowResults(true);\n      }\n    }\n  };\n\n  // Handle checkbox change for bookmarking questions\n  const handleCheckboxChange = question => {\n    setPreciseQuestion(question);\n    setIsChecked(!isChecked);\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Handle answer change\n  const handleAnswerChange = e => {\n    setUserAnswers({\n      ...userAnswers,\n      [currentQuestionIndex]: e.target.value\n    });\n    setShowWarning(false); // Reset warning when user inputs an answer\n  };\n\n  // Calculate score based on user answers\n  const calculateScore = () => {\n    return questions.reduce((score, question, index) => {\n      if (question.answer === userAnswers[index]) {\n        return score + 1;\n      }\n      return score;\n    }, 0);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Render the question component\n  return questions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isQuestion !== 'false' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col items-center justify-center p-6 rounded-lg max-w-md w-full ${isModalOpen ? 'bg-opacity-90 backdrop-blur-sm' : 'bg-opacity-100'} md:max-w-2xl lg:max-w-3xl xl:max-w-4xl`,\n      children: !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-2\",\n            children: [\"Question \", currentQuestionIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg\",\n            children: questions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col mb-4\",\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestionIndex}`,\n              value: option,\n              onChange: handleAnswerChange,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4 mb-4\",\n          children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative cursor-pointer flex items-center justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"checkboxInput\",\n              className: \"hidden\",\n              checked: isChecked,\n              onChange: () => handleCheckboxChange(questions[currentQuestionIndex])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"checkboxInput\",\n              className: \"bookmark relative flex items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"1em\",\n                viewBox: \"0 0 384 512\",\n                className: \"svgIcon h-8\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M0 48V487.7C0 501.1 10.9 512 24.3 512c5 0 9.9-1.5 14-4.4L192 400 345.7 507.6c4.1 2.9 9 4.4 14 4.4c13.4 0 24.3-10.9 24.3-24.3V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48z\",\n                  className: `fill-current ${isChecked ? 'text-green-600' : 'text-gray-600'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `absolute text-white font-bold ${isChecked ? 'text-xs top-1' : 'text-xl top-0'}`,\n                children: isChecked ? '\\u2713' : '\\u002B'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `absolute w-2 h-2 bg-green-700 rounded-full z-[-1] ${isChecked ? 'animate-puff-out-center' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), showWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center p-3 bg-red-500 text-white rounded-lg shadow-md w-80\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"24\",\n              height: \"24\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"#fff\",\n                d: \"M13 13h-2v-6h2zm0 4h-2v-2h2zm-1-15c-1.3132 0-2.61358.25866-3.82683.7612-1.21326.50255-2.31565 1.23915-3.24424 2.16773-1.87536 1.87537-2.92893 4.41891-2.92893 7.07107 0 2.6522 1.05357 5.1957 2.92893 7.0711.92859.9286 2.03098 1.6651 3.24424 2.1677 1.21325.5025 2.51363.7612 3.82683.7612 2.6522 0 5.1957-1.0536 7.0711-2.9289 1.8753-1.8754 2.9289-4.4189 2.9289-7.0711 0-1.3132-.2587-2.61358-.7612-3.82683-.5026-1.21326-1.2391-2.31565-2.1677-3.24424-.9286-.92858-2.031-1.66518-3.2443-2.16773-1.2132-.50254-2.5136-.7612-3.8268-.7612z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 font-medium text-sm\",\n            children: \"Please give the answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: [\"Your Score: \", calculateScore(), \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg\",\n              children: [index + 1, \". \", question.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm ${question.answer === userAnswers[index] ? 'text-green-500' : 'text-red-500'}`,\n              children: [\"Your Answer: \", userAnswers[index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), question.answer !== userAnswers[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-blue-500\",\n              children: [\"Correct Answer: \", question.answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SaveQuizModal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      savedQuizzes: preciseQuestion // Pass saved quizzes to modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(QuestionComponent, \"0lCjznO0LA49Tyx40mUSc561Z+8=\", false, function () {\n  return [useLocation];\n});\n_c = QuestionComponent;\nexport default QuestionComponent;\nvar _c;\n$RefreshReg$(_c, \"QuestionComponent\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","SaveQuizModal","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionComponent","quizData","_s","location","questions","state","isQuestion","console","log","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","showResults","setShowResults","showWarning","setShowWarning","isChecked","setIsChecked","isModalOpen","setIsModalOpen","preciseQuestion","setPreciseQuestion","user","JSON","parse","localStorage","getItem","handleNext","length","handleCheckboxChange","question","handleAnswerChange","e","target","value","calculateScore","reduce","score","index","answer","handleCloseModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","type","name","onChange","id","checked","htmlFor","xmlns","height","viewBox","d","onClick","width","fill","isOpen","onClose","savedQuizzes","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuizGPT/QuestionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SaveQuizModal from './SaveWindow'; // Import the modal component\n\nconst QuestionComponent = ({ quizData }) => {\n  const location = useLocation();\n  let { questions } = location.state || {};\n  const { isQuestion } = location.state || {};\n  \n  console.log(questions)\n\n  // State variables\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [preciseQuestion, setPreciseQuestion] = useState();\n\n  // Retrieve user profile from local storage\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n  // Reset to the first question when quizData changes\n  useEffect(() => {\n    if (quizData) {\n      console.log(\"inside quizdata\")\n      setCurrentQuestionIndex(0);\n      questions = quizData;\n    }\n    console.log(questions)\n  }, [quizData]);\n\n  // Handle next button click\n  const handleNext = () => {\n    // Show warning if no answer is selected\n    if (!userAnswers[currentQuestionIndex]) {\n      setShowWarning(true);\n    } else {\n      setShowWarning(false);\n      // Move to the next question or show results if it's the last question\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        setShowResults(true);\n      }\n    }\n  };\n\n  // Handle checkbox change for bookmarking questions\n  const handleCheckboxChange = (question) => {\n    setPreciseQuestion(question);\n    setIsChecked(!isChecked);\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Handle answer change\n  const handleAnswerChange = (e) => {\n    setUserAnswers({\n      ...userAnswers,\n      [currentQuestionIndex]: e.target.value,\n    });\n    setShowWarning(false); // Reset warning when user inputs an answer\n  };\n\n  // Calculate score based on user answers\n  const calculateScore = () => {\n    return questions.reduce((score, question, index) => {\n      if (question.answer === userAnswers[index]) {\n        return score + 1;\n      }\n      return score;\n    }, 0);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Render the question component\n  return questions ? (\n    <>\n      {isQuestion !== 'false' ? (\n        <div className={`flex flex-col items-center justify-center p-6 rounded-lg max-w-md w-full ${isModalOpen ? 'bg-opacity-90 backdrop-blur-sm' : 'bg-opacity-100'} md:max-w-2xl lg:max-w-3xl xl:max-w-4xl`}>\n          {!showResults ? (\n            <div className=\"w-full\">\n              <div className=\"mb-4\">\n                <h2 className=\"text-xl font-bold mb-2\">\n                  Question {currentQuestionIndex + 1}:\n                </h2>\n                <p className=\"text-lg\">{questions[currentQuestionIndex].question}</p>\n              </div>\n\n              <div className=\"flex flex-col mb-4\">\n                {questions[currentQuestionIndex].options.map((option, index) => (\n                  <label key={index} className=\"mb-2\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${currentQuestionIndex}`}\n                      value={option}\n                      onChange={handleAnswerChange}\n                      className=\"mr-2\"\n                    />\n                    {option}\n                  </label>\n                ))}\n              </div>\n\n              <div className=\"flex justify-end space-x-4 mb-4\">\n                {user && (\n                  <div className=\"relative cursor-pointer flex items-center justify-center\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"checkboxInput\"\n                      className=\"hidden\"\n                      checked={isChecked}\n                      onChange={() => handleCheckboxChange(questions[currentQuestionIndex])}\n                    />\n                    <label\n                      htmlFor=\"checkboxInput\"\n                      className=\"bookmark relative flex items-center justify-center\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        height=\"1em\"\n                        viewBox=\"0 0 384 512\"\n                        className=\"svgIcon h-8\"\n                      >\n                        <path\n                          d=\"M0 48V487.7C0 501.1 10.9 512 24.3 512c5 0 9.9-1.5 14-4.4L192 400 345.7 507.6c4.1 2.9 9 4.4 14 4.4c13.4 0 24.3-10.9 24.3-24.3V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48z\"\n                          className={`fill-current ${isChecked ? 'text-green-600' : 'text-gray-600'}`}\n                        />\n                      </svg>\n                      <span\n                        className={`absolute text-white font-bold ${isChecked ? 'text-xs top-1' : 'text-xl top-0'}`}\n                      >\n                        {isChecked ? '\\u2713' : '\\u002B'}\n                      </span>\n                      <span\n                        className={`absolute w-2 h-2 bg-green-700 rounded-full z-[-1] ${isChecked ? 'animate-puff-out-center' : ''}`}\n                      ></span>\n                    </label>\n                  </div>\n                )}\n\n                <button\n                  onClick={handleNext}\n                  className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n                >\n                  Next\n                </button>\n              </div>\n              {showWarning && (\n                <div className=\"flex items-center p-3 bg-red-500 text-white rounded-lg shadow-md w-80\">\n                  <div className=\"mr-2\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        fill=\"#fff\"\n                        d=\"M13 13h-2v-6h2zm0 4h-2v-2h2zm-1-15c-1.3132 0-2.61358.25866-3.82683.7612-1.21326.50255-2.31565 1.23915-3.24424 2.16773-1.87536 1.87537-2.92893 4.41891-2.92893 7.07107 0 2.6522 1.05357 5.1957 2.92893 7.0711.92859.9286 2.03098 1.6651 3.24424 2.1677 1.21325.5025 2.51363.7612 3.82683.7612 2.6522 0 5.1957-1.0536 7.0711-2.9289 1.8753-1.8754 2.9289-4.4189 2.9289-7.0711 0-1.3132-.2587-2.61358-.7612-3.82683-.5026-1.21326-1.2391-2.31565-2.1677-3.24424-.9286-.92858-2.031-1.66518-3.2443-2.16773-1.2132-.50254-2.5136-.7612-3.8268-.7612z\"\n                      ></path>\n                    </svg>\n                  </div>\n                  <div className=\"flex-1 font-medium text-sm\">\n                    Please give the answer\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"w-full\">\n              <h2 className=\"text-xl font-bold mb-4\">Quiz Results</h2>\n              <p className=\"text-lg mb-4\">\n                Your Score: {calculateScore()} / {questions.length}\n              </p>\n              <div>\n                {questions.map((question, index) => (\n                  <div key={index} className=\"mb-4\">\n                    <p className=\"text-lg\">\n                      {index + 1}. {question.question}\n                    </p>\n                    <p\n                      className={`text-sm ${\n                        question.answer === userAnswers[index]\n                          ? 'text-green-500'\n                          : 'text-red-500'\n                      }`}\n                    >\n                      Your Answer: {userAnswers[index]}\n                    </p>\n                    {question.answer !== userAnswers[index] && (\n                      <p className=\"text-sm text-blue-500\">\n                        Correct Answer: {question.answer}\n                      </p>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>no quiz</div>\n      )}\n      \n      <SaveQuizModal\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        savedQuizzes={preciseQuestion} // Pass saved quizzes to modal\n      />\n    </>\n  ) : (\n    <>\n    </>\n  );\n};\n\nexport default QuestionComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}