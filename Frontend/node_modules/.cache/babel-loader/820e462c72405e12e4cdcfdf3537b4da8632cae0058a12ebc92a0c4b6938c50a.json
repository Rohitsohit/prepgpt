{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet backend = 'http://localhost:8000';\nexport default function CustomGPT() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [chatStarted, setChatStarted] = useState(false);\n  const sendMessage = async () => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'User',\n      text: message\n    }]);\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: message\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: 'Bot',\n        text: data.message\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setMessage(\"\");\n    }\n  };\n  const sendCustomData = async customData => {\n    const response = await fetch(`${backend}/gpt/upload-data`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: customData\n      })\n    });\n    const data = await response.json();\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'Bot',\n      text: data.message\n    }]);\n  };\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    if (file.type === 'application/pdf') {\n      extractTextFromPDF(file);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n  const extractTextFromPDF = file => {\n    // Your code for extracting text from PDF goes here\n  };\n  const extractTextFromTXT = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n      };\n      reader.onprogress = data => {\n        if (data.lengthComputable) {\n          const progress = Math.round(data.loaded / data.total * 100);\n          setUploadProgress(progress);\n        }\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        console.log(reader.result);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleStartChat = () => {\n    setChatStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen\",\n    children: !chatStarted ? !fileUploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex flex-col items-center px-4 py-6 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-8 h-8\",\n          fill: \"currentColor\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 20 20\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-2 text-base leading-normal\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          onChange: handleUploadFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500 text-xs leading-none py-1 text-center text-white rounded-full\",\n          style: {\n            width: `${uploadProgress}%`\n          },\n          children: [uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartChat,\n      className: \"p-4 bg-blue-500 text-white rounded-lg mt-4\",\n      children: \"Start the chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow h-72 p-4 overflow-y-auto bg-gray-100 rounded\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"} p-2 rounded max-w-xs`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow p-2 border border-gray-300 rounded\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomGPT, \"mikXMttUeS0Frcpoxg4xEjDw0Q0=\");\n_c = CustomGPT;\nvar _c;\n$RefreshReg$(_c, \"CustomGPT\");","map":{"version":3,"names":["React","useState","pdfjsLib","jsxDEV","_jsxDEV","Fragment","_Fragment","backend","CustomGPT","_s","messages","setMessages","message","setMessage","fileUploaded","setFileUploaded","uploadProgress","setUploadProgress","chatStarted","setChatStarted","sendMessage","prevMessages","user","text","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","sendCustomData","customData","handleUploadFile","event","file","target","files","type","extractTextFromPDF","extractTextFromTXT","alert","reader","FileReader","onloadstart","onprogress","lengthComputable","progress","Math","round","loaded","total","onloadend","log","result","readAsText","handleStartChat","className","children","fill","xmlns","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","width","onClick","map","msg","index","value","e","placeholder","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport * as pdfjsLib from 'pdfjs-dist';\n\nlet backend = 'http://localhost:8000';\n\nexport default function CustomGPT() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [chatStarted, setChatStarted] = useState(false);\n\n  const sendMessage = async () => {\n    setMessages((prevMessages) => [...prevMessages, { user: 'User', text: message }]);\n\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: message }),\n      });\n\n      const data = await response.json();\n\n      setMessages((prevMessages) => [...prevMessages, { user: 'Bot', text: data.message }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setMessage(\"\");\n    }\n  };\n\n  const sendCustomData = async (customData) => {\n    const response = await fetch(`${backend}/gpt/upload-data`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ data: customData }),\n    });\n    const data = await response.json();\n    setMessages((prevMessages) => [...prevMessages, { user: 'Bot', text: data.message }]);\n  };\n\n  const handleUploadFile = (event) => {\n    const file = event.target.files[0];\n    \n    if (file.type === 'application/pdf') {\n      extractTextFromPDF(file);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n\n  const extractTextFromPDF = (file) => {\n    // Your code for extracting text from PDF goes here\n  };\n\n  const extractTextFromTXT = (file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n      };\n      reader.onprogress = (data) => {\n        if (data.lengthComputable) {\n          const progress = Math.round((data.loaded / data.total) * 100);\n          setUploadProgress(progress);\n        }\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        console.log(reader.result);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleStartChat = () => {\n    setChatStarted(true);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      {!chatStarted ? (\n        !fileUploaded ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <label className=\"flex flex-col items-center px-4 py-6 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150\">\n              <svg\n                className=\"w-8 h-8\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\" />\n              </svg>\n              <span className=\"mt-2 text-base leading-normal\">Upload File</span>\n              <input type=\"file\" className=\"hidden\" onChange={handleUploadFile} />\n            </label>\n            {uploadProgress > 0 && (\n              <div className=\"w-full bg-gray-200 rounded-full mt-4\">\n                <div\n                  className=\"bg-blue-500 text-xs leading-none py-1 text-center text-white rounded-full\"\n                  style={{ width: `${uploadProgress}%` }}\n                >\n                  {uploadProgress}%\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <button\n            onClick={handleStartChat}\n            className=\"p-4 bg-blue-500 text-white rounded-lg mt-4\"\n          >\n            Start the chat\n          </button>\n        )\n      ) : (\n        <>\n          <div className=\"flex flex-col flex-grow h-72 p-4 overflow-y-auto bg-gray-100 rounded\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`}\n              >\n                <div\n                  className={`${\n                    msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"\n                  } p-2 rounded max-w-xs`}\n                >\n                  {msg.text}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4 flex\">\n            <input\n              type=\"text\"\n              className=\"flex-grow p-2 border border-gray-300 rounded\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <button onClick={sendMessage} className=\"ml-2 p-2 bg-blue-500 text-white rounded\">\n              Send\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}