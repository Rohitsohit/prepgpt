{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n  _s();\n  const [QuizTitles, setQuizTitles] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n  console.log(user.username);\n  useEffect(() => {\n    fetchTitles();\n  }, []);\n  const fetchTitles = async () => {\n    try {\n      // const response = await fetch(`${backend}/gpt/getallquiz`, {\n      //   method: 'GET',\n      //   headers: { 'Content-Type': 'application/json' },\n\n      // });\n\n      const response = await axios.get(`${backend}/gpt/getallquiz`, {\n        username: user.username\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setQuizTitles(data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const fetchQuiz = async title => {\n    try {\n      const response = await fetch(`${backend}/gpt/get-quiz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n  const handleQuestionClick = title => {\n    console.log(title);\n    fetchQuiz(title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col lg:flex-row pt-32\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Saved Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: QuizTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleQuestionClick(title),\n          className: \"p-2 border-b border-gray-300\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\",\n      children: /*#__PURE__*/_jsxDEV(QuestionComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionLayout, \"zcCFsoYra2hrm/6oVXsX6uohoIM=\");\n_c = QuestionLayout;\nexport default QuestionLayout;\nvar _c;\n$RefreshReg$(_c, \"QuestionLayout\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComponent","useSearchParams","axios","jsxDEV","_jsxDEV","backend","QuestionLayout","_s","QuizTitles","setQuizTitles","user","JSON","parse","localStorage","getItem","console","log","username","fetchTitles","response","get","ok","Error","data","json","quizTitles","error","fetchQuiz","title","fetch","method","headers","handleQuestionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuestionLayout.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n\n  const [QuizTitles, setQuizTitles] = useState([]);\n  \n  const user=JSON.parse(localStorage.getItem(\"profile-prepGPT\"))\n  console.log(user.username)\n  useEffect(() => {\n    \n    fetchTitles();\n    \n  }, [])\n\n  const fetchTitles = async () => {\n    try {\n      // const response = await fetch(`${backend}/gpt/getallquiz`, {\n      //   method: 'GET',\n      //   headers: { 'Content-Type': 'application/json' },\n\n      // });\n\n      const response = await axios.get(`${backend}/gpt/getallquiz`, { username:user.username});\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setQuizTitles(data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n\n  \n  const fetchQuiz = async (title)=>{\n    try {\n      const response = await fetch(`${backend}/gpt/get-quiz`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n     console.log(data)\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  }\n\n  const handleQuestionClick = (title)=>{\n      console.log(title)\n      fetchQuiz(title)\n  }\n\n\n  return (\n    <div className=\"flex flex-col lg:flex-row pt-32\"> {/* Added padding-top */}\n      <div className=\"w-full lg:w-1/3 p-4 overflow-y-auto h-96 bg-white shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n        <ul>\n          {QuizTitles.map((title, index) => (\n            <li key={index} onClick={()=>handleQuestionClick(title)} className=\"p-2 border-b border-gray-300\">\n              {title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"w-full lg:w-2/3 p-4 bg-white shadow-md rounded\">\n        <QuestionComponent/>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}