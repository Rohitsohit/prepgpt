{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT/CustomGPT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nlet backend = 'http://localhost:8000';\nexport default function CustomGPT() {\n  _s();\n  // State variables\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [messageLoading, setMessageLoading] = useState(false);\n\n  // Send message to the backend and update the message list\n  const sendMessage = async () => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'User',\n      text: message\n    }]);\n    setMessageLoading(true);\n    setMessages(prevMessages => [...prevMessages, {\n      user: 'Loading',\n      text: '...'\n    }]);\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: message\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => prevMessages.slice(0, -1).concat({\n        user: 'Bot',\n        text: data.message\n      }));\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prevMessages => prevMessages.slice(0, -1));\n    } finally {\n      setMessage(\"\");\n      setMessageLoading(false);\n    }\n  };\n\n  // Send custom data to the backend\n  const sendCustomData = async customData => {\n    try {\n      const response = await fetch(`${backend}/gpt/upload-data`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: customData\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: 'Bot',\n        text: data.message\n      }]);\n    } catch (error) {\n      console.error('Error uploading custom data:', error);\n    }\n  };\n\n  // Handle file upload and read its content\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    if (file.type === 'application/pdf') {\n      extractTextFromPDF(event);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n\n  // Extract text from PDF\n  const extractTextFromPDF = async event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      // Convert the file to a UintArray\n      const typedarray = new Uint8Array(event.target.result);\n      // Parse the PDF content\n      const pdf = await pdfjs.getDocument({\n        data: typedarray\n      }).promise;\n      const text = Extracttext(pdf);\n    };\n  };\n  const Extracttext = async pdf => {\n    let extractedText = \"\";\n    const numPages = pdf.numPages;\n    for (let i = 1; i < numPages; i++) {\n      const page = await pdf.getPage(i);\n      const textContent = await page.getTextContent();\n      textContent.items.forEach(textItem => {\n        extractedText += textItem.str + \" \";\n      });\n    }\n    return extractedText;\n  };\n\n  // Extract text from TXT file\n  const extractTextFromTXT = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n        simulateProgress();\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Simulate upload progress\n  const simulateProgress = () => {\n    const interval = setInterval(() => {\n      setUploadProgress(prevProgress => {\n        if (prevProgress >= 100) {\n          clearInterval(interval);\n          return 100;\n        }\n        return prevProgress + 15;\n      });\n    }, 50);\n  };\n\n  // Start chat after file upload\n  const handleStartChat = () => {\n    setChatStarted(true);\n  };\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen\",\n    children: !chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex flex-col items-center px-6 py-8 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150 text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-12 h-12\",\n          fill: \"currentColor\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 20 20\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-4 text-lg leading-normal\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"hidden\",\n          onChange: handleUploadFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500 text-sm leading-none py-2 text-center text-white rounded-full transition-all duration-500\",\n          style: {\n            width: `${uploadProgress}%`\n          },\n          children: [uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `transition-opacity duration-500 mt-6 ${uploadProgress === 100 ? 'opacity-100' : 'opacity-0'}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartChat,\n          className: \"p-6 bg-blue-500 text-white rounded-lg text-lg\",\n          children: \"Start the chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full max-w-2xl h-full p-4 bg-gray-100 rounded shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-grow h-96 p-4 overflow-y-auto bg-gray-100 rounded\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`,\n          children: msg.user === \"Loading\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-10 h-10 border-4 border-blue-500 border-t-transparent border-solid rounded-full animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"} p-2 rounded max-w-xs`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow p-2 border border-gray-300 rounded\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomGPT, \"0tsZ2bZNKUDo6KOwl9i1SFS82lc=\");\n_c = CustomGPT;\nvar _c;\n$RefreshReg$(_c, \"CustomGPT\");","map":{"version":3,"names":["React","useState","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","backend","CustomGPT","_s","messages","setMessages","message","setMessage","fileUploaded","setFileUploaded","uploadProgress","setUploadProgress","chatStarted","setChatStarted","messageLoading","setMessageLoading","sendMessage","prevMessages","user","text","response","fetch","method","headers","body","JSON","stringify","data","json","slice","concat","error","console","sendCustomData","customData","handleUploadFile","event","file","target","files","type","extractTextFromPDF","extractTextFromTXT","alert","reader","FileReader","onload","typedarray","Uint8Array","result","pdf","getDocument","promise","Extracttext","extractedText","numPages","i","page","getPage","textContent","getTextContent","items","forEach","textItem","str","onloadstart","simulateProgress","onloadend","readAsText","interval","setInterval","prevProgress","clearInterval","handleStartChat","className","children","fill","xmlns","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","width","onClick","map","msg","index","value","e","placeholder","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/CustomGPT/CustomGPT.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {pdfjs} from \"react-pdf\";\n  pdfjs.GlobalWorkerOptions.workerSrc =`//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nlet backend = 'http://localhost:8000';\n\nexport default function CustomGPT() {\n  // State variables\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [messageLoading, setMessageLoading] = useState(false);\n\n  // Send message to the backend and update the message list\n  const sendMessage = async () => {\n    setMessages((prevMessages) => [...prevMessages, { user: 'User', text: message }]);\n    setMessageLoading(true);\n    setMessages((prevMessages) => [...prevMessages, { user: 'Loading', text: '...' }]);\n\n    try {\n      const response = await fetch(`${backend}/gpt/message`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: message }),\n      });\n\n      const data = await response.json();\n\n      setMessages((prevMessages) =>\n        prevMessages.slice(0, -1).concat({ user: 'Bot', text: data.message })\n      );\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages((prevMessages) => prevMessages.slice(0, -1));\n    } finally {\n      setMessage(\"\");\n      setMessageLoading(false);\n    }\n  };\n\n  // Send custom data to the backend\n  const sendCustomData = async (customData) => {\n    try {\n      const response = await fetch(`${backend}/gpt/upload-data`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ data: customData }),\n      });\n      const data = await response.json();\n      setMessages((prevMessages) => [...prevMessages, { user: 'Bot', text: data.message }]);\n    } catch (error) {\n      console.error('Error uploading custom data:', error);\n    }\n  };\n\n  // Handle file upload and read its content\n  const handleUploadFile = (event) => {\n    const file = event.target.files[0];\n\n    if (file.type === 'application/pdf') {\n      extractTextFromPDF(event);\n    } else if (file.type === 'text/plain') {\n      extractTextFromTXT(file);\n    } else {\n      alert('Unsupported file type');\n    }\n  };\n\n  // Extract text from PDF\n  const extractTextFromPDF = async (event) => {\n    const file = event. target.files[0];\n\n      const reader = new FileReader ();\n  reader.onload = async (event) => {\n  // Convert the file to a UintArray\n  const typedarray = new Uint8Array(event.target.result);\n  // Parse the PDF content\n  const pdf = await pdfjs.getDocument({ data: typedarray}). promise\n    const text = Extracttext(pdf)\n\n  }\n\n    \n\n\n\n  };\n\n  const Extracttext = async(pdf)=>{\n    let extractedText = \"\";\n    const numPages = pdf.numPages;\n    for (let i = 1; i < numPages; i++) {\n      const page = await pdf.getPage(i);\n      const textContent = await page.getTextContent();\n      textContent.items.forEach((textItem) => { extractedText += textItem.str + \" \"});\n    }\n\n    return extractedText;\n  }\n\n  // Extract text from TXT file\n  const extractTextFromTXT = (file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadstart = () => {\n        setUploadProgress(0);\n        simulateProgress();\n      };\n      reader.onloadend = () => {\n        setFileUploaded(true);\n        sendCustomData(reader.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Simulate upload progress\n  const simulateProgress = () => {\n    const interval = setInterval(() => {\n      setUploadProgress((prevProgress) => {\n        if (prevProgress >= 100) {\n          clearInterval(interval);\n          return 100;\n        }\n        return prevProgress + 15;\n      });\n    }, 50);\n  };\n\n  // Start chat after file upload\n  const handleStartChat = () => {\n    setChatStarted(true);\n  };\n\n  // Render the component\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\n      {!chatStarted ? (\n        <div className=\"flex flex-col items-center justify-center h-full\">\n          <label className=\"flex flex-col items-center px-6 py-8 bg-white rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-700 hover:text-white text-blue-700 ease-linear transition-all duration-150 text-lg\">\n            <svg\n              className=\"w-12 h-12\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M16.88 11.74a1 1 0 00-.68-.74l-3.45-.86-1.55-3.1a1 1 0 00-1.8 0l-1.55 3.1-3.45.86a1 1 0 00-.68.74 1 1 0 00.18.87l2.5 2.44-.58 3.43a1 1 0 001.45 1.05L10 17.57l3.09 1.63a1 1 0 001.45-1.05l-.58-3.43 2.5-2.44a1 1 0 00.18-.87zM10 14.45V6a1 1 0 10-2 0v8.45l-2.17-1.14-.5 3a1 1 0 001.45 1.05L10 17.57l2.22 1.16a1 1 0 001.45-1.05l-.5-3L10 14.45z\" />\n            </svg>\n            <span className=\"mt-4 text-lg leading-normal\">Upload File</span>\n            <input type=\"file\" className=\"hidden\" onChange={handleUploadFile} />\n          </label>\n          {uploadProgress > 0 && (\n            <div className=\"w-full bg-gray-200 rounded-full mt-6\">\n              <div\n                className=\"bg-blue-500 text-sm leading-none py-2 text-center text-white rounded-full transition-all duration-500\"\n                style={{ width: `${uploadProgress}%` }}\n              >\n                {uploadProgress}%\n              </div>\n            </div>\n          )}\n          <div className={`transition-opacity duration-500 mt-6 ${uploadProgress === 100 ? 'opacity-100' : 'opacity-0'}`}>\n            <button\n              onClick={handleStartChat}\n              className=\"p-6 bg-blue-500 text-white rounded-lg text-lg\"\n            >\n              Start the chat\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex flex-col w-full max-w-2xl h-full p-4 bg-gray-100 rounded shadow-lg\">\n          <div className=\"flex flex-col flex-grow h-96 p-4 overflow-y-auto bg-gray-100 rounded\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex ${msg.user === \"User\" ? \"justify-end\" : \"justify-start\"} mb-2`}\n              >\n                {msg.user === \"Loading\" ? (\n                  <div className=\"flex justify-center mb-2\">\n                    <div className=\"w-10 h-10 border-4 border-blue-500 border-t-transparent border-solid rounded-full animate-spin\"></div>\n                  </div>\n                ) : (\n                  <div\n                    className={`${msg.user === \"User\" ? \"bg-blue-500 text-white\" : \"bg-gray-300 text-gray-700\"\n                      } p-2 rounded max-w-xs`}\n                  >\n                    {msg.text}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4 flex\">\n            <input\n              type=\"text\"\n              className=\"flex-grow p-2 border border-gray-300 rounded\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <button onClick={sendMessage} className=\"ml-2 p-2 bg-blue-500 text-white rounded\">\n              Send\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}