{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuizGPT/QuestionLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport axios from 'axios';\n\n// Backend URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet backend = 'http://localhost:8000';\nconst QuestionLayout = () => {\n  _s();\n  // State variables\n  const [QuizTitles, setQuizTitles] = useState([]);\n  const [quizData, setQuizData] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n  // Fetch quiz titles when the component mounts and user is available\n  useEffect(() => {\n    if (user) {\n      fetchTitles();\n    }\n  }, []);\n\n  // Fetch existing quiz titles from the backend\n  const fetchTitles = async () => {\n    try {\n      const response = await axios.get(`${backend}/gpt/getallquiz`, {\n        params: {\n          username: user.username\n        }\n      });\n      setQuizTitles(response.data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Fetch a specific quiz from the backend\n  const fetchQuiz = async (titleToRetrieve, username) => {\n    try {\n      if (user) {\n        const res = await axios.post(`${backend}/gpt/get-quiz`, {\n          titleToRetrieve,\n          username\n        });\n        setQuizData(res.data);\n        console.log(res.data.quizQuestions); // Update the state with the fetched quiz data\n      } else {\n        console.log(\"Please log in\");\n      }\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n\n  // Handle click on a quiz title to fetch its questions\n  const handleQuestionClick = title => {\n    fetchQuiz(title, user.username);\n  };\n\n  // Render the layout\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex justify-center items-center min-h-screen bg-animation\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row w-full lg:w-3/4 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-2/5 p-4 overflow-y-auto h-96 bg-white bg-opacity-85 shadow-md rounded mb-4 lg:mb-0 lg:mr-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Saved Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), user ? loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: QuizTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleQuestionClick(title),\n            className: \"p-2 border-b border-gray-300 cursor-pointer\",\n            children: title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Need to login to get the saved questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-3/5 p-4 h-96 overflow-y-auto bg-white bg-opacity-85 shadow-md rounded\",\n        children: /*#__PURE__*/_jsxDEV(QuestionComponent, {\n          quizData: quizData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionLayout, \"CAiHhuB4nHHTgmxpRogiBpfMAGw=\");\n_c = QuestionLayout;\nexport default QuestionLayout;\nvar _c;\n$RefreshReg$(_c, \"QuestionLayout\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComponent","axios","jsxDEV","_jsxDEV","backend","QuestionLayout","_s","QuizTitles","setQuizTitles","quizData","setQuizData","loading","setLoading","user","JSON","parse","localStorage","getItem","fetchTitles","response","get","params","username","data","quizTitles","error","console","fetchQuiz","titleToRetrieve","res","post","log","quizQuestions","handleQuestionClick","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/rohit/Documents/Cohere/prepgpt/Frontend/src/Components/QuizGPT/QuestionLayout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuestionComponent from './QuestionComponent';\nimport axios from 'axios';\n\n// Backend URL\nlet backend = 'http://localhost:8000';\n\nconst QuestionLayout = () => {\n  // State variables\n  const [QuizTitles, setQuizTitles] = useState([]);\n  const [quizData, setQuizData] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const user = JSON.parse(localStorage.getItem(\"profile-prepGPT\"));\n\n  // Fetch quiz titles when the component mounts and user is available\n  useEffect(() => {\n    if (user) {\n      fetchTitles();\n    }\n  }, []);\n\n  // Fetch existing quiz titles from the backend\n  const fetchTitles = async () => {\n    try {\n      const response = await axios.get(`${backend}/gpt/getallquiz`, {\n        params: {\n          username: user.username\n        }\n      });\n      setQuizTitles(response.data.quizTitles || []);\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    } finally {\n      setLoading(false); // Set loading to false after fetching\n    }\n  };\n\n  // Fetch a specific quiz from the backend\n  const fetchQuiz = async (titleToRetrieve, username) => {\n    try {\n      if (user) {\n        const res = await axios.post(`${backend}/gpt/get-quiz`, { titleToRetrieve, username });\n        setQuizData(res.data);\n        console.log(res.data.quizQuestions)  // Update the state with the fetched quiz data\n      } else {\n        console.log(\"Please log in\");\n      }\n    } catch (error) {\n      console.error('Error fetching quiz data:', error);\n    }\n  };\n\n  // Handle click on a quiz title to fetch its questions\n  const handleQuestionClick = (title) => {\n    fetchQuiz(title, user.username);\n  };\n\n  // Render the layout\n  return (\n    <div className=\"relative flex justify-center items-center min-h-screen bg-animation\">\n      <div className=\"flex flex-col lg:flex-row w-full lg:w-3/4 px-4\">\n        <div className=\"w-full lg:w-2/5 p-4 overflow-y-auto h-96 bg-white bg-opacity-85 shadow-md rounded mb-4 lg:mb-0 lg:mr-4\">\n          <h2 className=\"text-xl font-bold mb-4\">Saved Questions</h2>\n          {user ? (\n            loading ? (\n              <p>Loading...</p>\n            ) : (\n              <ul>\n                {QuizTitles.map((title, index) => (\n                  <li key={index} onClick={() => handleQuestionClick(title)} className=\"p-2 border-b border-gray-300 cursor-pointer\">\n                    {title}\n                  </li>\n                ))}\n              </ul>\n            )\n          ) : (\n            <p>Need to login to get the saved questions</p>\n          )}\n        </div>\n        <div className=\"w-full lg:w-3/5 p-4 h-96 overflow-y-auto bg-white bg-opacity-85 shadow-md rounded\">\n          <QuestionComponent quizData={quizData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}